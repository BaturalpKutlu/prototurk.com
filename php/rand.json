{
  "author": "mustafakucuk <devmustafakucuk@gmail.com>",
  "edit": [
    "tayfunerbilen <tayfunerbilen@gmail.com>"
  ],
  "title": "PHP'de rand() Fonksiyonu",
  "name": "rand",
  "syntax": "rand ( int $min , int $max ) : int",
  "description": "Belirtilen iki değer arasında rastgele tam sayı üretir.",
  "compatibilities": [
    "php 4",
    "php 5",
    "php 7"
  ],
  "params": [
    {
      "name": "$min",
      "type": "int",
      "description": "Üretilecek en düşük tam sayı",
      "default": "0",
      "required": false
    },
    {
      "name": "$max",
      "type": "int",
      "description": "Üretilecek en yüksek tam sayı - min parametresi girmeniz durumunda max parametreside girilmesi gerekmektedir.",
      "default": "getrandmax()",
      "required": false
    }
  ],
  "examples": [
    {
      "code": "<?php\n\necho rand(10, 100); // Çıktı: 78\n\n?>",
      "description": "10 ile 100 arasında bir sayı üretelim."
    },
    {
      "code": "<?php\n\necho rand(); // Çıktı: 1130777104\n\n?>",
      "description": "0 ile alabileceği en yüksek tam sayı arasında bir sayı üretelim."
    }
  ],
  "note": "Bazı platformlarda (özellikle <code>Windows</code>), <code>getrnadmax()</code> fonksiyonu en fazla <code>32767</code> olabilir. Eğer bu değerden daha yüksek bir değere ihtiyacınız olursa, <code>$min</code> ve <code>$max</code> değerlerini belirterek üretebilirsiniz ya da <code>mt_rand()</code> fonksiyonunu kullanabilirsiniz.\n\nPHP 7.1.0'dan itibaren <code>rand()</code> fonksiyonu <code>mt_rand()</code> ile aynı sayı üreticisini kullanmaktadır. Ancak geriye dönük uyumluluğunu korumak için <code>rand()</code> fonksiyonu, <<code>mt_rand()</code> fonksiyonunun aksine <code>$max</code> değerini <code>$min</code> değerinden küçük olabilirken <code>mt_rand()</code> fonksiyonunda ise hata verecektir.",
  "changelogs": [
    {
      "version": "7.1.0",
      "description": "<code>rand()</code> fonksiyonu <code>mt_rand()</code> fonksiyonunun taklidi olarak değiştirildi. Yani her iki fonksiyonda aynı işlevi yapıyor, ancak geriye dönük uyumluluk problemleri olmaması için notlarda belirttiğimiz şekilde düzenleme yapıldı."
    }
  ],
  "return": {
    "type": "int",
    "text": "İşlemin sonucunda geriye belirtilen aralıkta üretilmiş integer tipinde değer döner."
  },
  "deprecated": false
}
